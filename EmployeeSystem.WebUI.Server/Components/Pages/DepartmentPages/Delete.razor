@page "/departments/delete"

@using Microsoft.EntityFrameworkCore
@using EmployeeSystem.Domain.Entities
@using EmployeeSystem.Application.Services
@inject IDbContextFactory<EmployeeSystem.Infrastructure.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@inject DepartmentService DepartmentService

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
    <MudText Typo="Typo.h4" Align="Align.Center" Class="mb-4">Delete Department</MudText>
<div>
   <MudCard>
       <MudCardContent>
                <MudText Typo="Typo.h6" Align="Align.Center" Class="mb-4">Are you sure you want to delete this?</MudText>
                @if (Department is null)
                {
                    <MudText Typo="Typo.body1" Align="Align.Center" Color="Color.Secondary">Loading...</MudText>
                }
                else
                {
                    <MudGrid>
                        <MudItem xs="12" md="6">
                            <MudTextField Label="Department Code" Value="@Department.DepartmentCode" ReadOnly="true" />
                        </MudItem>

                        <MudItem xs="12" md="6">
                            <MudTextField Label="Department Name" Value="@Department.DepartmentName" ReadOnly="true" />
                        </MudItem>

                    </MudGrid>
                    <EditForm Model="Department" FormName="delete" Enhance>
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="DeleteDepartment" Class="mt-4" Disabled="@(Department is null)">
                            Delete
                        </MudButton>
                        <MudButton Variant="Variant.Text" Color="Color.Secondary" Href="/employees" Class="mt-4">
                            Back to List
                        </MudButton>
                    </EditForm>
                }
       </MudCardContent>
   </MudCard>
    
</div>

</MudContainer>
@code {

    [SupplyParameterFromQuery]
    public int DepartmentId { get; set; }

    [SupplyParameterFromForm]
    public Department? Department { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Department = await DepartmentService.GetDepartmentByIdAsync(DepartmentId);

        if (Department is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteDepartment()
    {
        var success = await DepartmentService.DeleteDepartmentAsync(Department);

        if (!success)
        {
            NavigationManager.NavigateTo("notfound");
        }
        else
        {
            NavigationManager.NavigateTo("/departments");
        }
    }
}
