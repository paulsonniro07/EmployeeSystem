@page "/employees/create"

@using Microsoft.EntityFrameworkCore
@using EmployeeSystem.Domain.Entities
@using EmployeeSystem.Application.Services
@inject IDbContextFactory<EmployeeSystem.Infrastructure.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@inject EmployeeService EmployeeService
@inject DepartmentService DepartmentService
@rendermode InteractiveServer

<PageTitle>Create Employee</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
    <MudText Typo="Typo.h4" Align="Align.Center" Class="mb-4">Create Employee</MudText>

    <MudCard>
        <MudCardContent>
            <EditForm Model="Employee" FormName="create">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <MudGrid>
                    <MudItem xs="12" md="6">
                        <MudTextField Label="Employee No" @bind-Value="Employee.EmployeeNo" Required="true" />
                        <ValidationMessage For="() => Employee.EmployeeNo" />
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <MudTextField Label="Employee Name" @bind-Value="Employee.EmployeeName" Required="true" />
                        <ValidationMessage For="() => Employee.EmployeeName" />
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <MudSelect T="Gender" Label="Gender" @bind-Value="Employee.Gender" Required="true">
                            @foreach (Gender gender in Enum.GetValues(typeof(Gender)))
                            {
                                <MudSelectItem T="Gender" Value="@gender">@gender</MudSelectItem>
                            }
                        </MudSelect>

                        <ValidationMessage For="() => Employee.Gender" />
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <MudTextField Label="Email" @bind-Value="Employee.Email" Required="true" />
                        <ValidationMessage For="() => Employee.Email" />
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <MudTextField Label="Contact No" @bind-Value="Employee.ContactNo" Required="true" />
                        <ValidationMessage For="() => Employee.ContactNo" />
                    </MudItem>

                    <MudItem xs="12">
                        <MudTextField Label="Address" @bind-Value="Employee.EmployeeAddress" Required="true" TextFieldType="TextFieldType.MultiLine" />
                        <ValidationMessage For="() => Employee.EmployeeAddress" />
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <MudTextField Label="Position" @bind-Value="Employee.Position" Required="true" />
                        <ValidationMessage For="() => Employee.Position" />
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <MudSelect Label="Department" @bind-Value="Employee.DepartmentId" Required="true">
                            @foreach (var dept in Departments)
                            {
                                <MudSelectItem Value="@dept.DepartmentId">@dept.DepartmentName</MudSelectItem>
                            }
                        </MudSelect>
                        <ValidationMessage For="() => Employee.DepartmentId" />
                    </MudItem>
                </MudGrid>

                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="AddEmployee" Type="submit" Class="mt-4">
                    Create
                </MudButton>
            </EditForm>
        </MudCardContent>
    </MudCard>

    <MudButton Variant="Variant.Text" Color="Color.Secondary" Href="/employees" Class="mt-4">
        Back to List
    </MudButton>
</MudContainer>

@code {
    [SupplyParameterFromForm]
    public Employee Employee { get; set; } = new();

    public IEnumerable<Department> Departments { get; set; } = new List<Department>();

    protected override async Task OnInitializedAsync()
    {
        Departments = await DepartmentService.GetAllDepartmentsAsync();
    }

    public async Task AddEmployee()
    {
        await EmployeeService.AddEmployeeAsync(Employee);
        NavigationManager.NavigateTo("/employees");
    }
}
